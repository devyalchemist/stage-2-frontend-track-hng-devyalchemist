{% extends "layouts/main.twig" %}

{% block content %}
    <div class="flex items-center justify-center min-h-screen bg-gray-100 relative px-4 sm:px-0">
        <a href="/" class="absolute top-6 left-6 md:top-8 md:left-8 text-gray-500 hover:text-checkerr-orange transition-colors" aria-label="Go back home">
           &larr; Back
        </a>
        <div class="w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow-lg">
            <div class="text-center">
                <h1 class="text-3xl font-bold text-checkerr-green">Create your Chekaa Account</h1>
                <p class="mt-2 text-gray-600">Get started in just a few steps.</p>
            </div>
            <form id="signup-form" class="space-y-6">
                <div>
                    <label for="email" class="block text-sm font-medium text-gray-700">Email Address</label>
                    <input id="email" name="email" type="email" required class="w-full px-3 py-2 mt-1 border rounded-md shadow-sm focus:outline-none focus:ring-checkerr-orange focus:border-checkerr-orange border-gray-300"/>
                    <p id="email-error" class="mt-1 text-xs text-red-500 h-4"></p>
                </div>
                <div>
                    <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
                    <input id="password" name="password" type="password" required minlength="6" class="w-full px-3 py-2 mt-1 border rounded-md shadow-sm focus:outline-none focus:ring-checkerr-orange focus:border-checkerr-orange border-gray-300"/>
                    <p id="password-error" class="mt-1 text-xs text-red-500 h-4"></p>
                </div>
                <div>
                    <label for="confirmPassword" class="block text-sm font-medium text-gray-700">Confirm Password</label>
                    <input id="confirmPassword" name="confirmPassword" type="password" required minlength="6" class="w-full px-3 py-2 mt-1 border rounded-md shadow-sm focus:outline-none focus:ring-checkerr-orange focus:border-checkerr-orange border-gray-300"/>
                    <p id="confirmPassword-error" class="mt-1 text-xs text-red-500 h-4"></p>
                </div>
                <div>
                    <button type="submit" class="w-full px-4 py-2 font-medium text-white bg-checkerr-orange rounded-md hover:bg-opacity-80 focus:outline-none focus:ring-2 focus:ring-checkerr-orange focus:ring-offset-2 transition-colors">
                        Create Account
                    </button>
                </div>
            </form>
            <p class="text-sm text-center text-gray-600">
                Already have an account?
                <a href="/auth/login" class="font-medium text-checkerr-orange hover:underline">Sign in</a>
            </p>
        </div>
    </div>
{% endblock %}

{% block scripts %}
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const signupForm = document.getElementById('signup-form');
        const emailInput = document.getElementById('email');
        const passwordInput = document.getElementById('password');
        const confirmPasswordInput = document.getElementById('confirmPassword');
        const emailError = document.getElementById('email-error');
        const passwordError = document.getElementById('password-error');
        const confirmPasswordError = document.getElementById('confirmPassword-error');

        signupForm.addEventListener('submit', (event) => {
            event.preventDefault();
            console.log("Signup form submitted");

            emailError.textContent = '';
            passwordError.textContent = '';
            confirmPasswordError.textContent = '';

            const email = emailInput.value.trim();
            const password = passwordInput.value;
            const confirmPassword = confirmPasswordInput.value;

            let isValid = true;
            if (!email) {
                emailError.textContent = 'Email is required';
                isValid = false;
            } else if (!/^\S+@\S+$/i.test(email)) { 
                 emailError.textContent = 'Invalid email format';
                 isValid = false;
            }
            if (!password) {
                passwordError.textContent = 'Password is required';
                isValid = false;
            } else if (password.length < 6) {
                passwordError.textContent = 'Password must be at least 6 characters';
                isValid = false;
            }
            if (!confirmPassword) {
                confirmPasswordError.textContent = 'Please confirm your password';
                isValid = false;
            } else if (password !== confirmPassword) {
                confirmPasswordError.textContent = 'Passwords do not match';
                isValid = false;
            }

            if (!isValid) {
                return;
            }

            const existingUserString = localStorage.getItem('ticketapp_user');
            if (existingUserString) {
                console.warn("Signup blocked: User already exists in localStorage.");
                Toastify({ text: "An account already exists. Please log in.", duration: 3000, gravity: "bottom", position: "right", style: { background: "linear-gradient(to right, #ff5f6d, #ffc371)" }}).showToast();
                emailError.textContent = 'An account with this email might already exist.';
                return;
            }

            const newUser = {
                id: email, 
                email: email,
                name: email.split('@')[0], 
                password: password, 
                isAuthenticated: true 
            };
            console.log("Creating new user:", newUser);

            try {
                localStorage.setItem('ticketapp_user', JSON.stringify(newUser));
                const mockToken = `mock-token-${Date.now()}`;
                localStorage.setItem('ticketapp_session', mockToken);
                localStorage.setItem('ticketapp_tickets', JSON.stringify([]));

                console.log("User, session, and tickets initialized in localStorage.");

                Toastify({ text: "Account Created! Redirecting...", duration: 2000, gravity: "bottom", position: "right", style: { background: "linear-gradient(to right, #00b09b, #96c93d)" }}).showToast();

                setTimeout(() => {
                    window.location.href = '/dashboard';
                }, 1500);

            } catch (e) {
                console.error("Error saving data to localStorage:", e);
                Toastify({ text: "Failed to save account data. Please try again.", duration: 3000, gravity: "bottom", position: "right", style: { background: "linear-gradient(to right, #ff5f6d, #ffc371)" }}).showToast();
            }
        });
    });
</script>
{% endblock %}